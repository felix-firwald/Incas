<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Вырезать" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Копировать" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Вставить" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RibbonTextBox}">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Вырезать" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Копировать" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Вставить" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBoxBase}">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Вырезать" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Копировать" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Вставить" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DatePickerMain" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Language" Value="ru-RU"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Вырезать" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Копировать" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Вставить" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxBase" TargetType="{x:Type TextBox}">
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Background" Value="{StaticResource Black}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource Focus}"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Padding" Value="7 5"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource Rubik}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Вырезать" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Копировать" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Вставить" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="8" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid>
                            <ScrollViewer 
                                x:Name="PART_ContentHost" 
                                Focusable="False" 
                                HorizontalScrollBarVisibility="Hidden" 
                                VerticalScrollBarVisibility="Hidden" Foreground="{TemplateBinding Foreground}"  />
                            <Label 
                                x:Name="WaterMarkerLabel" 
                                Content="{TemplateBinding Tag}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Visibility="Collapsed"
                                Foreground="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Center">
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="ContextMenu.IsOpen" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkerLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard><!--#43464d-->
                                        <ColorAnimation Duration="0:0:0.250" To="#FF3E414B" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.100" To="2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#FF3E414B" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Error}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxMain" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MaxHeight" Value="30"/>
        
    </Style>
    <Style x:Key="TextBoxBig" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="MinHeight" Value="60"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>
    <Style x:Key="TextBoxGrid" TargetType="{x:Type TextBox}">
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Background" Value="{StaticResource Black}"/>
        <Setter Property="Foreground" Value="{StaticResource Light}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Focus}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="29"/>
        <Setter Property="Margin" Value="-4,0,0,0"/>
        <Setter Property="Padding" Value="5 3"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Вырезать" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Копировать" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Вставить" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid>
                            <ScrollViewer 
                            x:Name="PART_ContentHost" 
                            Focusable="False" 
                            HorizontalScrollBarVisibility="Hidden" 
                            VerticalScrollBarVisibility="Hidden" Foreground="{TemplateBinding Foreground}"  />
                            <Label 
                            x:Name="WaterMarkerLabel" 
                            Content="{TemplateBinding Tag}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Visibility="Collapsed"
                            Foreground="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Center">
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="ContextMenu.IsOpen" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkerLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--#43464d-->
                                        <ColorAnimation Duration="0:0:0.250" To="#FF3E414B" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.100" To="2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#FF3E414B" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Error}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxTransparent" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayLight}"/>
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" MinWidth="20" BorderBrush="DodgerBlue" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer 
                                x:Name="PART_ContentHost" 
                                Focusable="False"
                                
                                
                                HorizontalScrollBarVisibility="Hidden" 
                                VerticalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="DodgerBlue"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.100" To="0,0,0,2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{DynamicResource Black}"/>
        <Setter Property="Foreground" Value="{DynamicResource Light}"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="150"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Element}"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="PasswordChar" Value="*"/>
        <Setter Property="MaxLength" Value="16"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="8">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--#43464d-->
                                        <ColorAnimation Duration="0:0:0.250" To="#43464d" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.100" To="2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#43464d" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.250" To="1.3" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Error}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxEmpty" TargetType="{x:Type TextBox}">
        <!--<Setter Property="Padding" Value="10 3"/>-->
        <!--<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplateMain}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <ScrollViewer 
                        x:Name="PART_ContentHost" 
                        Focusable="False" 
                        HorizontalScrollBarVisibility="Hidden" 
                        VerticalScrollBarVisibility="Hidden" Foreground="{TemplateBinding Foreground}"  />
                        <Label 
                        x:Name="WaterMarkerLabel" 
                        Content="{TemplateBinding Tag}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Visibility="Collapsed"
                        Foreground="{TemplateBinding BorderBrush}"
                        Padding="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxCode" TargetType="{x:Type TextBox}">
        <Setter Property="MinHeight" Value="80"/>
        <Setter Property="Background" Value="{StaticResource Black}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Element}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
        <Setter Property="AcceptsReturn" Value="True"/>

    </Style>
    <Style x:Key="RichTextBoxCode" TargetType="RichTextBox">
        <Setter Property="MinHeight" Value="80"/>
        <Setter Property="Background" Value="{StaticResource Black}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Element}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>
    <Style x:Key="SliderMain" TargetType="{x:Type Slider}">
        
    </Style>
    
    <ControlTemplate x:Key="ValidationErrorTemplateMain">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--<TextBlock Foreground="{StaticResource Error}" FontSize="26" FontWeight="Bold">Ошибка: </TextBlock>-->
            <!--<Ellipse Width="6" Height="6" Fill="Red" />-->
            <Rectangle Fill="{StaticResource Error}" Grid.Column="1" Height="1" VerticalAlignment="Bottom" Margin="10"/>
            <Border CornerRadius="8" Grid.Column="1" Margin="12">
                <AdornedElementPlaceholder />
            </Border>

        </Grid>
    </ControlTemplate>
</ResourceDictionary>