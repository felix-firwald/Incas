<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:fa="http://schemas.fontawesome.io/icons/">
    <Style x:Key="LabelIncubator" TargetType="{x:Type Label}">
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
        <Setter Property="TextElement.FontWeight" Value="ExtraBold"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>
    <Style x:Key="TextBlockImportant" TargetType="{x:Type TextBlock}">
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
        <Setter Property="TextElement.FontWeight" Value="ExtraLight"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <Style x:Key="LabelPrimary" TargetType="{x:Type Label}">
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
        <Setter Property="TextElement.FontWeight" Value="ExtraLight"/>
        <Setter Property="Foreground" Value="{StaticResource DarkLight}"/>
        <Setter Property="TextElement.FontSize" Value="16"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <Style x:Key="LabelSecondary" TargetType="{x:Type Label}">
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
        <Setter Property="TextElement.FontWeight" Value="Medium"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <Style x:Key="LabelElement" TargetType="{x:Type Label}">
        <Setter Property="TextElement.FontFamily" Value="{StaticResource Rubik}"/>
        <Setter Property="TextElement.FontWeight" Value="ExtraLight"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource Light}"/>
    </Style>
    <Style x:Key="LabelElementSpecial" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelElement}">
        <Setter Property="Foreground" Value="{StaticResource LightPurple}"/>
    </Style>
    <Style x:Key="LabelElementSuccess" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelElement}">
        <Setter Property="Foreground" Value="{StaticResource Success}"/>
    </Style>
    <Style x:Key="TextBlockMain" TargetType="{x:Type TextBlock}">
        <Setter Property="TextElement.FontFamily" Value="{StaticResource JetBrains}"/>
    </Style>
    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryMain}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.100" To="#69B5FF" Storyboard.TargetProperty="Foreground.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.150" To="DodgerBlue" Storyboard.TargetProperty="Foreground.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HyperlinkRed" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource Error}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.100" To="#ff2b2b" Storyboard.TargetProperty="Foreground.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.150" To="#FF0033" Storyboard.TargetProperty="Foreground.Color"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LabelStatus" TargetType="{x:Type Label}">
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Margin" Value="6"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border x:Name="Border" CornerRadius="6" Background="{StaticResource Dark}">
                        <!--<Label Foreground="{DynamicResource Basic}" Content="{TemplateBinding Content}"/>-->
                        <ContentPresenter TextElement.Foreground="{StaticResource LightPurple}" Margin="6" TextElement.FontFamily="/Static/Fonts/#JetBrains Mono"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>