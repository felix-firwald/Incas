<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="ButtonMain" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Dark}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Element}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="11"/>
        <!--<Setter Property="FontFamily" Value="{StaticResource Rubik}"/>-->
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" TextElement.FontFamily="{StaticResource Rubik}" TextElement.FontSize="12" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="DodgerBlue" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.150" To="#1E73C7" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#1E73C7" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderBrush" TargetName="border" Value="DodgerBlue"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#1873CC"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToggleButtonMain" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Dark}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Element}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="8" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#FF2D2D33" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="#B255FF" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#B255FF" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#FF2D2D33" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="#B255FF" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#B255FF" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#FF2D2D33" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        --><!--<ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>--><!--
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#FF2D2D33" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ColorAnimation Duration="0:0:0.100" To="#FF434650" Storyboard.TargetProperty="BorderBrush.Color"/>
                                        --><!--<ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>--><!--
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderBrush" TargetName="border" Value="DodgerBlue"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LightPurple}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="ContextMenu.IsOpen" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonMainFinish" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Success}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Element}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <!--<Setter Property="FontFamily" Value="{StaticResource Rubik}"/>-->
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" TextElement.FontFamily="{StaticResource Rubik}" TextElement.FontSize="12" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="#399D33" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#34C924" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderBrush" TargetName="border" Value="#399D33"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#399D33"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMainError" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Error}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Element}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <!--<Setter Property="FontFamily" Value="{StaticResource Rubik}"/>-->
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="8" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="#A12342" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.100" To="0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#FF0033" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <!--<ThicknessAnimation Duration="0:0:0.250" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderBrush" TargetName="border" Value="#A12342"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#822F46"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Error}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarWindowButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Black}"/>
        <Setter Property="Margin" Value="3,6,3,6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="6" Opacity="1" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" TextElement.Foreground="White" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightBlack}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#34C924"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DashboardButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LightBlack}"/>
        <Setter Property="Foreground" Value="{StaticResource GrayLight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightPurple}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.100" To="#2D2D30" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.100" To="4,0,0,0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.250" To="#252528" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        <ThicknessAnimation Duration="0:0:0.250" To="0,0,0,0" Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="0,12,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonFlat" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Element}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Opacity="1" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="DodgerBlue"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonSquare" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Icon}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MaxWidth" Value="30"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Opacity="1" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource Element}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Element}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Icon}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonSquareGrid" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Icon}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MaxWidth" Value="30"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Opacity="1" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource Element}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Element}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Icon}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonRectangle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Icon}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10,0,5,0"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="FontFamily" Value="{StaticResource Rubik}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="180"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Opacity="1" CornerRadius="8" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource Element}" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Element}"/>
                            <!--<Setter TargetName="border" Property="BorderThickness" Value="1"/>
                        <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Icon}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Icon}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>